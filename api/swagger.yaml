openapi: 3.0.0
info:
  title: API BlackBox
  version: 0.0.1
tags:
  - name: compras
paths:
  /compras: 
    post: 
      tags:
        - compras
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Compra'
      responses:
        201:
          description: Cadastro de compra com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compra'
                  
        422:
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        500:
          description: Servidor não contactado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
      security:
       - JWTAuth : [] 
    get: 
      tags:
        - compras
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Compra'
      responses:
        200:
          description: Consultar todas as compras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compra'
      security:
       - JWTAuth : [] 
  /compras/{id}:
    get: 
      tags:
        - compras
      parameters:
        - in: path
          type: string
          name: id
      responses:
        200:
          description: Consultar uma compra
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compra'
        400:
          description: Id Inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        404:
          description: Compra não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
      security:
       - JWTAuth : [] 
    put:
      tags:
        - compras
      parameters:
        - in: path
          type: string
          name: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Compra'
      responses:
        200:
          description: Compra atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compra'
        400:
          description: Id Inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        404:
          description: Compra não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'        
        422:
          description: Dados inválidos
          content:
            appication/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
      security:
       - JWTAuth : [] 
    delete:
      tags:
        - compras
      parameters:
        - in: path
          type: string
          name: id
      responses:
        204:
          description: Compra Excluída
        400:
          description: Id Inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        404:
          description: Compra não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
      security:
       - JWTAuth : [] 

  /produtos:
    post:
      summary: Cria um novo produto 
      tags:
        - Cadastrar um novo produto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produto'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
    get:
      summary: Lista todos os produtos
      tags:
        - Listar todos os produtos cadastrados
      responses:
        200:
          contents:
            application/json:
              schema:
                $ref: '#components/schemas/ArrayOfProdutos'
  /produtos/{id}:
    get:
      summary: Busca o produto passando o ID
      tags:
        - Listar um produtos especifico
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
    put:
      tags:
        - Editar um produto
      summary: Edita o produto passando o ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoInput'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Produto'
        400:
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Mensagem'
        404:
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Mensagem'
        422:
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Mensagem'                      
    delete:
      summary: Exclui o produto passando o ID
      tags:
        - Excluir um produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        204:
          content:
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
components: 
  securitySchemes:
    JWTAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    ArrayOfCompras:
      type: array
      items:
        $ref: '#/components/schemas/Compra'
    Compra:
      type: object
      properties:
        produto:
          type: string
        preco:
          type: number
        quantidade: 
          type: number
        data:
          type: string
          format: date
        vendedor: 
          type: string
        nf: 
          type: number
    Mensagem:
      type: object
      properties:
        msg:
          type: string